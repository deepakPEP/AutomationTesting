name: Playwright Tests with Reports

on:
  workflow_dispatch:
  
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests (capture exit code)
        id: run_tests
        run: |
          set -o pipefail
          mkdir -p artifacts
          npx playwright test --config=playwright.config.ts
          rc=$?
          echo "$rc" > artifacts/tests_failed
        env:
          CI: true

      - name: Prepare artifacts dir
        if: ${{ always() }}
        run: mkdir -p artifacts

      - name: Show largest files (debug)
        if: ${{ always() }}
        run: |
          echo "WORKDIR: $(pwd)"
          echo "LIST ROOT:"
          ls -la || true

          echo "=== ARTIFACTS FOLDER ==="
          ls -la artifacts || echo "artifacts missing"

          echo "=== PLAYWRIGHT-REPORT ==="
          if [ -d "playwright-report" ]; then
            du -sh playwright-report || true
            echo "Top files in playwright-report:"
            find playwright-report -type f -print0 | xargs -0 du -h | sort -rh | head -40 || true
          else
            echo "no playwright-report directory"
          fi

          echo "=== TEST-RESULTS ==="
          if [ -d "test-results" ]; then
            du -sh test-results || true
            echo "Top files in test-results:"
            find test-results -type f -print0 | xargs -0 du -h | sort -rh | head -40 || true
          else
            echo "no test-results directory"
          fi

      - name: Create compressed report archive (tar.xz) with fallback
        if: ${{ always() }}
        run: |
          set -eux
          mkdir -p artifacts
          rc=$(cat artifacts/tests_failed 2>/dev/null || echo 1)
          echo "tests exit code: $rc"

          if [ "$rc" -eq 0 ]; then
            if [ -d "playwright-report" ]; then
              echo "Creating compact tar.xz (exclude videos/traces/screenshots)"
              tar -cJf artifacts/playwright-report.tar.xz \
                --exclude='**/*.webm' --exclude='**/trace.zip' --exclude='**/*.png' --exclude='**/*.jpg' \
                -C . playwright-report
            else
              echo "playwright-report missing; creating empty placeholder tar.xz"
              tar -cJf artifacts/playwright-report.tar.xz --files-from /dev/null
            fi
          else
            to_archive=""
            [ -d "playwright-report" ] && to_archive="$to_archive playwright-report"
            [ -d "test-results" ] && to_archive="$to_archive test-results"
            if [ -n "$to_archive" ]; then
              echo "Creating tar.xz including: $to_archive"
              tar -cJf artifacts/playwright-report.tar.xz -C . $to_archive || true
            else
              echo "no report/test-results found; creating empty placeholder tar.xz"
              tar -cJf artifacts/playwright-report.tar.xz --files-from /dev/null
            fi
          fi

          echo "ARTIFACTS CONTENTS:"
          ls -la artifacts || true
          du -h artifacts/* || true

          # fallback to zip if tar.xz not created for any reason
          if [ ! -f artifacts/playwright-report.tar.xz ]; then
            echo "tar.xz missing, creating zip fallback"
            rm -f artifacts/playwright-report.zip || true
            if [ -d "playwright-report" ] || [ -d "test-results" ]; then
              zip -r -9 artifacts/playwright-report.zip playwright-report test-results || true
            else
              # empty zip placeholder
              zip -r artifacts/playwright-report.zip --filesync --junk-paths /dev/null || true
            fi
          fi

      - name: Upload produced artifacts (always)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: artifacts/*
          retention-days: 30

      - name: Post Checkout
        if: ${{ always() }}
        run: echo "done"