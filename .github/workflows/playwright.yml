name: Playwright Tests

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --config=playwright.config.ts --reporter=html
        env:
            CI: true

      - name: Clean up unnecessary files (keep failure videos)
        if: always()
        run: |
          # Keep failure videos but remove other unnecessary files
          # Remove any test-results files that aren't needed
          rm -rf test-results-minimal || true
          # Remove any temp files
          find playwright-report -name "*.tmp" -delete || true
          find playwright-report -name "*.log" -delete || true
          # Show remaining files and total size
          echo "Remaining files in playwright-report:"
          du -sh playwright-report/ || true
          find playwright-report -type f | head -20

      - name: Upload Playwright Report with Failure Videos
        if: always()  # ensures it runs even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-with-failures
          path: |
            playwright-report/index.html
            playwright-report/**/*.html
            playwright-report/**/*.css
            playwright-report/**/*.js
            playwright-report/**/*.webm
            playwright-report/**/*.png
            playwright-report/**/*.zip
          retention-days: 30  # Keep artifacts for 30 days
    #   - name: Generate timestamp
    #     id: timestamp
    #     run: echo "ts=$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

    #   - name: Upload HTML Report to S3 with Timestamp
    #     if: always()
    #     uses: jakejarvis/s3-sync-action@master
    #     with:
    #       args: ""
    #     env:
    #       AWS_S3_BUCKET: peptestassets
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       AWS_REGION: ${{ secrets.AWS_REGION }}
    #       SOURCE_DIR: playwright-report
    #       DEST_DIR: reports/${{ steps.timestamp.outputs.ts }}
    #   - name: Send Playwright report via email (with attachment)
    #     if: always()
    #     uses: dawidd6/action-send-mail@v3
    #     with:
    #         server_address: smtp.gmail.com
    #         server_port: 465
    #         secure: true
    #         username: ${{ secrets.EMAIL_USERNAME }}
    #         password: ${{ secrets.EMAIL_PASSWORD }}
    #         subject: "ðŸ“„ Playwright Test Report - ${{ steps.timestamp.outputs.ts }}"
    #         to: pepagoraqareports@gmail.com 
    #         from: "QA Bot <${{ secrets.EMAIL_USERNAME }}>"
    #         content_type: text/html
    #         html_body: |
    #           Hello,<br><br>
    #           Please find attached the latest Playwright test report.<br>
    #           <br>
    #           Regards,<br>
    #           QA Automation Bot
    #         attachments: |
    #           playwright-report/index.html
          
        
      
