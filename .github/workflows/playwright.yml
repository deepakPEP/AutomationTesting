name: Playwright Tests

on:
  workflow_dispatch:  # Manual trigger

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        id: run_tests
        run: |
          # run tests using config (do NOT override reporters)
          npx playwright test --config=playwright.config.ts
          rc=$?
          echo "tests_failed=$rc" >> "$GITHUB_OUTPUT"

      - name: Prepare artifacts dir
        if: always()
        run: mkdir -p artifacts

      - name: Zip report (no videos) on success
        if: steps.run_tests.outputs.tests_failed == '0'
        run: |
          if [ -d "playwright-report" ]; then
            zip -r artifacts/playwright-report.zip playwright-report -x "*.webm"
          else
            echo "playwright-report not found"
          fi

      - name: Zip report (with videos) on failure
        if: steps.run_tests.outputs.tests_failed != '0'
        run: |
          if [ -d "playwright-report" ]; then
            zip -r artifacts/playwright-report.zip playwright-report
          else
            echo "playwright-report not found"
          fi

      - name: Upload single Playwright report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: artifacts/playwright-report.zip
          retention-days: 30
      
      - name: Generate timestamp
        id: timestamp
        run: echo "ts=$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Upload HTML Report to S3 with Timestamp
        if: always()
        uses: jakejarvis/s3-sync-action@master
        with:
          args: ""
        env:
          AWS_S3_BUCKET: peptestassets
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: playwright-report
          DEST_DIR: reports/${{ steps.timestamp.outputs.ts }}
    #   - name: Send Playwright report via email (with attachment)
    #     if: always()
    #     uses: dawidd6/action-send-mail@v3
    #     with:
    #         server_address: smtp.gmail.com
    #         server_port: 465
    #         secure: true
    #         username: ${{ secrets.EMAIL_USERNAME }}
    #         password: ${{ secrets.EMAIL_PASSWORD }}
    #         subject: "ðŸ“„ Playwright Test Report - ${{ steps.timestamp.outputs.ts }}"
    #         to: pepagoraqareports@gmail.com 
    #         from: "QA Bot <${{ secrets.EMAIL_USERNAME }}>"
    #         content_type: text/html
    #         html_body: |
    #           Hello,<br><br>
    #           Please find attached the latest Playwright test report.<br>
    #           <br>
    #           Regards,<br>
    #           QA Automation Bot
    #         attachments: |
    #           playwright-report/index.html
          
        
      
